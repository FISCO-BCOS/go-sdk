// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package auth

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/v3/abi"
	"github.com/FISCO-BCOS/go-sdk/v3/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/v3/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
)

// ProposalManagerProposalInfo is an auto generated low-level Go binding around an user-defined struct.
type ProposalManagerProposalInfo struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}

// ProposalManagerABI is the input ABI used to generate the binding from.
const ProposalManagerABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"committeeMgrAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"committeeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_proposalIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_voteComputer\",\"outputs\":[{\"internalType\":\"contractVoteComputerTemplate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"}],\"name\":\"auth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"}],\"name\":\"getIdByTypeAndResourceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"agreeVoters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"againstVoters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"getProposalInfoList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"agreeVoters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"againstVoters\",\"type\":\"address[]\"}],\"internalType\":\"structProposalManager.ProposalInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"refreshProposalStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setVoteComputer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"agree\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// ProposalManagerBin is the compiled bytecode used for deploying new contracts.
var ProposalManagerBin = "0x60806040523480156200001157600080fd5b5060405162003cc438038062003cc4833981810160405281019062000037919062000172565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816040516200008790620000fa565b62000094929190620001ca565b604051809103906000f080158015620000b1573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001f7565b6112c580620029ff83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013a826200010d565b9050919050565b6200014c816200012d565b81146200015857600080fd5b50565b6000815190506200016c8162000141565b92915050565b600080604083850312156200018c576200018b62000108565b5b60006200019c858286016200015b565b9250506020620001af858286016200015b565b9150509250929050565b620001c4816200012d565b82525050565b6000604082019050620001e16000830185620001b9565b620001f06020830184620001b9565b9392505050565b6127f880620002076000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063401853b711610097578063bc903cb811610066578063bc903cb8146102e9578063cd5d21181461031f578063dde248e31461034f578063fcf81c141461037f57610100565b8063401853b71461024d5780636d23cd581461027d5780636f2904cc146102ad578063b2bdfa7b146102cb57610100565b806320d154da116100d357806320d154da146101b5578063290bc797146101d15780632c3956fe146101ed578063315ce5e21461021d57610100565b80630a4948401461010557806313af40351461013957806319dcd07e146101555780631cc05cbc14610185575b600080fd5b61011f600480360381019061011a919061196d565b61039d565b604051610130959493929190611a06565b60405180910390f35b610153600480360381019061014e9190611a85565b61042d565b005b61016f600480360381019061016a919061196d565b6104b8565b60405161017c9190611ab2565b60405180910390f35b61019f600480360381019061019a9190611af9565b6105aa565b6040516101ac9190611b39565b60405180910390f35b6101cf60048036038101906101ca9190611b54565b6105cf565b005b6101eb60048036038101906101e69190611a85565b610731565b005b61020760048036038101906102029190611b94565b6107bd565b6040516102149190611b39565b60405180910390f35b61023760048036038101906102329190611c33565b610b33565b6040516102449190611ab2565b60405180910390f35b6102676004803603810190610262919061196d565b611073565b6040516102749190611ab2565b60405180910390f35b61029760048036038101906102929190611af9565b6110a0565b6040516102a49190611b39565b60405180910390f35b6102b5611101565b6040516102c29190611b39565b60405180910390f35b6102d3611107565b6040516102e09190611c86565b60405180910390f35b61030360048036038101906102fe919061196d565b61112b565b6040516103169796959493929190611d5f565b60405180910390f35b61033960048036038101906103349190611a85565b6112ec565b6040516103469190611deb565b60405180910390f35b61036960048036038101906103649190611e06565b611392565b6040516103769190612038565b60405180910390f35b610387611730565b60405161039491906120b9565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030160009054906101000a900460ff16905085565b610436336112ec565b610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c90612131565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160006003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051c9061219d565b60405180910390fd5b600060036000858152602001908152602001600020905060018160030160009054906101000a900460ff1660ff16141561058e57806002015443111561058d5760058160030160006101000a81548160ff021916908360ff16021790555060059250506105a4565b5b8060030160009054906101000a900460ff169250505b50919050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6105d8336112ec565b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90612131565b60405180910390fd5b60006003600084815260200190815260200160002090506001610639846104b8565b60ff161461067c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106739061222f565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107059061229b565b60405180910390fd5b60048160030160006101000a81548160ff021916908360ff160217905550505050565b61073a336112ec565b610779576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077090612131565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006107c8336112ec565b610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe90612131565b60405180910390fd5b6000600460008660ff1660ff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff16141561089c5761089a816104b8565b505b60016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd90612307565b60405180910390fd5b6002600081548092919061091990612356565b91905055506000600254905060608060006040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018a60ff1681526020018843610982919061239f565b8152602001600160ff168152602001848152602001838152509050806003600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360ff1602179055506060820151816002015560808201518160030160006101000a81548160ff021916908360ff16021790555060a0820151816004019080519060200190610aa792919061181c565b5060c0820151816005019080519060200190610ac492919061181c565b5090505083600460008b60ff1660ff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508395505050505050949350505050565b6000610b3e336112ec565b610b7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7490612131565b60405180910390fd5b8360006003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdf9061219d565b60405180910390fd5b8460016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff1614610c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4990612441565b60405180910390fd5b6000600360008881526020019081526020016000209050610e8a816040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff16815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ded57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610da3575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e7b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e31575b50505050508152505086611756565b15610eca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec1906124ad565b60405180910390fd5b8515610f3a5780600401859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fa0565b80600501859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353bfcf2f83600401846005016040518363ffffffff1660e01b81526004016110059291906125b9565b602060405180830381865afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110469190612605565b9050808260030160006101000a81548160ff021916908360ff160217905550809450505050509392505050565b60006003600083815260200190815260200160002060030160009054906101000a900460ff169050919050565b6000600460008460ff1660ff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060006060806000600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1697508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1696508060010160149054906101000a900460ff169550806002015494508060030160009054906101000a900460ff1693508060040180548060200260200160405190810160405280929190818152602001828054801561124e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611204575b50505050509250806005018054806020026020016040519081016040528092919081815260200182805480156112d957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161128f575b5050505050915050919395979092949650565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561132b576001905061138d565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611388576001905061138d565b600090505b919050565b60606002548311156113d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d0906126a4565b60405180910390fd5b8183111561141c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141390612710565b60405180910390fd5b60025482111561142c5760025491505b600183101561143a57600192505b60006001848461144a9190612730565b611454919061239f565b67ffffffffffffffff81111561146d5761146c612764565b5b6040519080825280602002602001820160405280156114a657816020015b6114936118a6565b81526020019060019003908161148b5790505b5090506000808590505b848111611724576000600360008381526020019081526020016000209050806040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016004820180548060200260200160405190810160405280929190818152602001828054801561164f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611605575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116dd57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611693575b5050505050815250508484806116f290612356565b95508151811061170557611704612793565b5b602002602001018190525050808061171c90612356565b9150506114b0565b50819250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006117668360a0015183611794565b8061177b575061177a8360c0015183611794565b5b15611789576001905061178e565b600090505b92915050565b600080600090505b8351811015611810578381815181106117b8576117b7612793565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117fd576001915050611816565b808061180890612356565b91505061179c565b50600090505b92915050565b828054828255906000526020600020908101928215611895579160200282015b828111156118945782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061183c565b5b5090506118a29190611915565b5090565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff16815260200160008152602001600060ff16815260200160608152602001606081525090565b5b8082111561192e576000816000905550600101611916565b5090565b600080fd5b6000819050919050565b61194a81611937565b811461195557600080fd5b50565b60008135905061196781611941565b92915050565b60006020828403121561198357611982611932565b5b600061199184828501611958565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119c58261199a565b9050919050565b6119d5816119ba565b82525050565b600060ff82169050919050565b6119f1816119db565b82525050565b611a0081611937565b82525050565b600060a082019050611a1b60008301886119cc565b611a2860208301876119cc565b611a3560408301866119e8565b611a4260608301856119f7565b611a4f60808301846119e8565b9695505050505050565b611a62816119ba565b8114611a6d57600080fd5b50565b600081359050611a7f81611a59565b92915050565b600060208284031215611a9b57611a9a611932565b5b6000611aa984828501611a70565b91505092915050565b6000602082019050611ac760008301846119e8565b92915050565b611ad6816119db565b8114611ae157600080fd5b50565b600081359050611af381611acd565b92915050565b60008060408385031215611b1057611b0f611932565b5b6000611b1e85828601611ae4565b9250506020611b2f85828601611a70565b9150509250929050565b6000602082019050611b4e60008301846119f7565b92915050565b60008060408385031215611b6b57611b6a611932565b5b6000611b7985828601611958565b9250506020611b8a85828601611a70565b9150509250929050565b60008060008060808587031215611bae57611bad611932565b5b6000611bbc87828801611a70565b9450506020611bcd87828801611ae4565b9350506040611bde87828801611a70565b9250506060611bef87828801611958565b91505092959194509250565b60008115159050919050565b611c1081611bfb565b8114611c1b57600080fd5b50565b600081359050611c2d81611c07565b92915050565b600080600060608486031215611c4c57611c4b611932565b5b6000611c5a86828701611958565b9350506020611c6b86828701611c1e565b9250506040611c7c86828701611a70565b9150509250925092565b6000602082019050611c9b60008301846119cc565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611cd6816119ba565b82525050565b6000611ce88383611ccd565b60208301905092915050565b6000602082019050919050565b6000611d0c82611ca1565b611d168185611cac565b9350611d2183611cbd565b8060005b83811015611d52578151611d398882611cdc565b9750611d4483611cf4565b925050600181019050611d25565b5085935050505092915050565b600060e082019050611d74600083018a6119cc565b611d8160208301896119cc565b611d8e60408301886119e8565b611d9b60608301876119f7565b611da860808301866119e8565b81810360a0830152611dba8185611d01565b905081810360c0830152611dce8184611d01565b905098975050505050505050565b611de581611bfb565b82525050565b6000602082019050611e006000830184611ddc565b92915050565b60008060408385031215611e1d57611e1c611932565b5b6000611e2b85828601611958565b9250506020611e3c85828601611958565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e7b816119db565b82525050565b611e8a81611937565b82525050565b600082825260208201905092915050565b6000611eac82611ca1565b611eb68185611e90565b9350611ec183611cbd565b8060005b83811015611ef2578151611ed98882611cdc565b9750611ee483611cf4565b925050600181019050611ec5565b5085935050505092915050565b600060e083016000830151611f176000860182611ccd565b506020830151611f2a6020860182611ccd565b506040830151611f3d6040860182611e72565b506060830151611f506060860182611e81565b506080830151611f636080860182611e72565b5060a083015184820360a0860152611f7b8282611ea1565b91505060c083015184820360c0860152611f958282611ea1565b9150508091505092915050565b6000611fae8383611eff565b905092915050565b6000602082019050919050565b6000611fce82611e46565b611fd88185611e51565b935083602082028501611fea85611e62565b8060005b8581101561202657848403895281516120078582611fa2565b945061201283611fb6565b925060208a01995050600181019050611fee565b50829750879550505050505092915050565b600060208201905081810360008301526120528184611fc3565b905092915050565b6000819050919050565b600061207f61207a6120758461199a565b61205a565b61199a565b9050919050565b600061209182612064565b9050919050565b60006120a382612086565b9050919050565b6120b381612098565b82525050565b60006020820190506120ce60008301846120aa565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f776e657221000000000000000000000000000000000000000000600082015250565b600061211b600b836120d4565b9150612126826120e5565b602082019050919050565b6000602082019050818103600083015261214a8161210e565b9050919050565b7f50726f706f73616c206e6f742065786973740000000000000000000000000000600082015250565b60006121876012836120d4565b915061219282612151565b602082019050919050565b600060208201905081810360008301526121b68161217a565b9050919050565b7f4f6e6c79206e65776c7920637265617465642070726f706f73616c2063616e2060008201527f6265207265766f6b656400000000000000000000000000000000000000000000602082015250565b6000612219602a836120d4565b9150612224826121bd565b604082019050919050565b600060208201905081810360008301526122488161220c565b9050919050565b7f4f6e6c792070726f706f7365722063616e207265766f6b650000000000000000600082015250565b60006122856018836120d4565b91506122908261224f565b602082019050919050565b600060208201905081810360008301526122b481612278565b9050919050565b7f43757272656e742070726f706f73616c206e6f7420656e640000000000000000600082015250565b60006122f16018836120d4565b91506122fc826122bb565b602082019050919050565b60006020820190508181036000830152612320816122e4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061236182611937565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561239457612393612327565b5b600182019050919050565b60006123aa82611937565b91506123b583611937565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123ea576123e9612327565b5b828201905092915050565b7f50726f706f73616c206973206e6f7420766f7461626c65000000000000000000600082015250565b600061242b6017836120d4565b9150612436826123f5565b602082019050919050565b6000602082019050818103600083015261245a8161241e565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000612497600d836120d4565b91506124a282612461565b602082019050919050565b600060208201905081810360008301526124c68161248a565b9050919050565b600081549050919050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061252d612528836124ed565b6124fa565b9050919050565b6000612540825461251a565b9050919050565b6000600182019050919050565b600061255f826124cd565b6125698185611cac565b9350612574836124d8565b8060005b838110156125ac5761258982612534565b6125938882611cdc565b975061259e83612547565b925050600181019050612578565b5085935050505092915050565b600060408201905081810360008301526125d38185612554565b905081810360208301526125e78184612554565b90509392505050565b6000815190506125ff81611acd565b92915050565b60006020828403121561261b5761261a611932565b5b6000612629848285016125f0565b91505092915050565b7f2766726f6d272069732067726561746572207468616e202770726f706f73616c60008201527f436f756e74270000000000000000000000000000000000000000000000000000602082015250565b600061268e6026836120d4565b915061269982612632565b604082019050919050565b600060208201905081810360008301526126bd81612681565b9050919050565b7f2766726f6d272069732067726561746572207468616e2027746f270000000000600082015250565b60006126fa601b836120d4565b9150612705826126c4565b602082019050919050565b60006020820190508181036000830152612729816126ed565b9050919050565b600061273b82611937565b915061274683611937565b92508282101561275957612758612327565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122032d121e2c1736249504182be0adaa33ff2cd5eecc290ae9304562ce850d8cc3f64736f6c634300080b003360806040523480156200001157600080fd5b50604051620012c5380380620012c583398181016040528101906200003791906200035e565b8181336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200008a82620001b460201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322acb8676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200013a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001609190620003e6565b63ffffffff161015620001aa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a1906200049f565b60405180910390fd5b5050505062000533565b620001c5336200024a60201b60201c565b62000207576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001fe9062000511565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156200028b5760019050620002ef565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620002ea5760019050620002ef565b600090505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200032682620002f9565b9050919050565b620003388162000319565b81146200034457600080fd5b50565b60008151905062000358816200032d565b92915050565b60008060408385031215620003785762000377620002f4565b5b6000620003888582860162000347565b92505060206200039b8582860162000347565b9150509250929050565b600063ffffffff82169050919050565b620003c081620003a5565b8114620003cc57600080fd5b50565b600081519050620003e081620003b5565b92915050565b600060208284031215620003ff57620003fe620002f4565b5b60006200040f84828501620003cf565b91505092915050565b600082825260208201905092915050565b7f636f6d6d6974746565206973206572726f722c20706c6561736520636865636b60008201527f2061646472657373210000000000000000000000000000000000000000000000602082015250565b60006200048760298362000418565b9150620004948262000429565b604082019050919050565b60006020820190508181036000830152620004ba8162000478565b9050919050565b7f4f6e6c79206f776e657221000000000000000000000000000000000000000000600082015250565b6000620004f9600b8362000418565b91506200050682620004c1565b602082019050919050565b600060208201905081810360008301526200052c81620004ea565b9050919050565b610d8280620005436000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301410de21461006757806313af403514610097578063185c1587146100b357806353bfcf2f146100d1578063b2bdfa7b14610101578063cd5d21181461011f575b600080fd5b610081600480360381019061007c91906106e9565b61014f565b60405161008e9190610773565b60405180910390f35b6100b160048036038101906100ac91906107ec565b6101cc565b005b6100bb610257565b6040516100c89190610878565b60405180910390f35b6100eb60048036038101906100e691906109ec565b61027d565b6040516100f89190610773565b60405180910390f35b610109610596565b6040516101169190610a73565b60405180910390f35b610139600480360381019061013491906107ec565b6105ba565b6040516101469190610aa9565b60405180910390f35b60008260ff16846101609190610af3565b63ffffffff166064866101739190610af3565b63ffffffff16101561018857600190506101c3565b848260ff166101979190610af3565b63ffffffff166064876101aa9190610af3565b63ffffffff16106101be57600290506101c3565b600390505b95945050505050565b6101d5336105ba565b610214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020b90610b8e565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663965b9ff1856040518263ffffffff1660e01b81526004016102db9190610c6c565b602060405180830381865afa1580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c9190610ca3565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663965b9ff1856040518263ffffffff1660e01b815260040161037b9190610c6c565b602060405180830381865afa158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc9190610ca3565b826103c79190610cd0565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322acb8676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610ca3565b905061058b838383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635615696f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f59190610d1f565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6fd90676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190610d1f565b61014f565b935050505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156105f9576001905061065b565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610656576001905061065b565b600090505b919050565b6000604051905090565b600080fd5b600080fd5b600063ffffffff82169050919050565b61068d81610674565b811461069857600080fd5b50565b6000813590506106aa81610684565b92915050565b600060ff82169050919050565b6106c6816106b0565b81146106d157600080fd5b50565b6000813590506106e3816106bd565b92915050565b600080600080600060a086880312156107055761070461066a565b5b60006107138882890161069b565b95505060206107248882890161069b565b94505060406107358882890161069b565b9350506060610746888289016106d4565b9250506080610757888289016106d4565b9150509295509295909350565b61076d816106b0565b82525050565b60006020820190506107886000830184610764565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107b98261078e565b9050919050565b6107c9816107ae565b81146107d457600080fd5b50565b6000813590506107e6816107c0565b92915050565b6000602082840312156108025761080161066a565b5b6000610810848285016107d7565b91505092915050565b6000819050919050565b600061083e6108396108348461078e565b610819565b61078e565b9050919050565b600061085082610823565b9050919050565b600061086282610845565b9050919050565b61087281610857565b82525050565b600060208201905061088d6000830184610869565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6108e182610898565b810181811067ffffffffffffffff82111715610900576108ff6108a9565b5b80604052505050565b6000610913610660565b905061091f82826108d8565b919050565b600067ffffffffffffffff82111561093f5761093e6108a9565b5b602082029050602081019050919050565b600080fd5b600061096861096384610924565b610909565b9050808382526020820190506020840283018581111561098b5761098a610950565b5b835b818110156109b457806109a088826107d7565b84526020840193505060208101905061098d565b5050509392505050565b600082601f8301126109d3576109d2610893565b5b81356109e3848260208601610955565b91505092915050565b60008060408385031215610a0357610a0261066a565b5b600083013567ffffffffffffffff811115610a2157610a2061066f565b5b610a2d858286016109be565b925050602083013567ffffffffffffffff811115610a4e57610a4d61066f565b5b610a5a858286016109be565b9150509250929050565b610a6d816107ae565b82525050565b6000602082019050610a886000830184610a64565b92915050565b60008115159050919050565b610aa381610a8e565b82525050565b6000602082019050610abe6000830184610a9a565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610afe82610674565b9150610b0983610674565b92508163ffffffff0483118215151615610b2657610b25610ac4565b5b828202905092915050565b600082825260208201905092915050565b7f4f6e6c79206f776e657221000000000000000000000000000000000000000000600082015250565b6000610b78600b83610b31565b9150610b8382610b42565b602082019050919050565b60006020820190508181036000830152610ba781610b6b565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610be3816107ae565b82525050565b6000610bf58383610bda565b60208301905092915050565b6000602082019050919050565b6000610c1982610bae565b610c238185610bb9565b9350610c2e83610bca565b8060005b83811015610c5f578151610c468882610be9565b9750610c5183610c01565b925050600181019050610c32565b5085935050505092915050565b60006020820190508181036000830152610c868184610c0e565b905092915050565b600081519050610c9d81610684565b92915050565b600060208284031215610cb957610cb861066a565b5b6000610cc784828501610c8e565b91505092915050565b6000610cdb82610674565b9150610ce683610674565b92508263ffffffff03821115610cff57610cfe610ac4565b5b828201905092915050565b600081519050610d19816106bd565b92915050565b600060208284031215610d3557610d3461066a565b5b6000610d4384828501610d0a565b9150509291505056fea2646970667358221220edf31b0ea2df709ee47c4f0b4c0f8a611857e817c19c74f00e5cebd08976a07b64736f6c634300080b0033"

// DeployProposalManager deploys a new contract, binding an instance of ProposalManager to it.
func DeployProposalManager(auth *bind.TransactOpts, backend bind.ContractBackend, committeeMgrAddress common.Address, committeeAddress common.Address) (common.Address, *types.Receipt, *ProposalManager, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, receipt, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ProposalManagerBin), ProposalManagerABI, backend, committeeMgrAddress, committeeAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, receipt, &ProposalManager{ProposalManagerCaller: ProposalManagerCaller{contract: contract}, ProposalManagerTransactor: ProposalManagerTransactor{contract: contract}, ProposalManagerFilterer: ProposalManagerFilterer{contract: contract}}, nil
}

func AsyncDeployProposalManager(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend, committeeMgrAddress common.Address, committeeAddress common.Address) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(ProposalManagerBin), ProposalManagerABI, backend, committeeMgrAddress, committeeAddress)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// ProposalManager is an auto generated Go binding around a Solidity contract.
type ProposalManager struct {
	ProposalManagerCaller     // Read-only binding to the contract
	ProposalManagerTransactor // Write-only binding to the contract
	ProposalManagerFilterer   // Log filterer for contract events
}

// ProposalManagerCaller is an auto generated read-only Go binding around a Solidity contract.
type ProposalManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerTransactor is an auto generated write-only Go binding around a Solidity contract.
type ProposalManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type ProposalManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type ProposalManagerSession struct {
	Contract     *ProposalManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ProposalManagerCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type ProposalManagerCallerSession struct {
	Contract *ProposalManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ProposalManagerTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type ProposalManagerTransactorSession struct {
	Contract     *ProposalManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ProposalManagerRaw is an auto generated low-level Go binding around a Solidity contract.
type ProposalManagerRaw struct {
	Contract *ProposalManager // Generic contract binding to access the raw methods on
}

// ProposalManagerCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type ProposalManagerCallerRaw struct {
	Contract *ProposalManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ProposalManagerTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type ProposalManagerTransactorRaw struct {
	Contract *ProposalManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewProposalManager creates a new instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManager(address common.Address, backend bind.ContractBackend) (*ProposalManager, error) {
	contract, err := bindProposalManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ProposalManager{ProposalManagerCaller: ProposalManagerCaller{contract: contract}, ProposalManagerTransactor: ProposalManagerTransactor{contract: contract}, ProposalManagerFilterer: ProposalManagerFilterer{contract: contract}}, nil
}

// NewProposalManagerCaller creates a new read-only instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerCaller(address common.Address, caller bind.ContractCaller) (*ProposalManagerCaller, error) {
	contract, err := bindProposalManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerCaller{contract: contract}, nil
}

// NewProposalManagerTransactor creates a new write-only instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ProposalManagerTransactor, error) {
	contract, err := bindProposalManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerTransactor{contract: contract}, nil
}

// NewProposalManagerFilterer creates a new log filterer instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ProposalManagerFilterer, error) {
	contract, err := bindProposalManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerFilterer{contract: contract}, nil
}

// bindProposalManager binds a generic wrapper to an already deployed contract.
func bindProposalManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ProposalManager *ProposalManagerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ProposalManager.Contract.ProposalManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ProposalManager *ProposalManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.ProposalManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ProposalManager *ProposalManagerRaw) TransactWithResult(opts *bind.TransactOpts, result interface{}, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.ProposalManagerTransactor.contract.TransactWithResult(opts, result, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ProposalManager *ProposalManagerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ProposalManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ProposalManager *ProposalManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ProposalManager *ProposalManagerTransactorRaw) TransactWithResult(opts *bind.TransactOpts, result interface{}, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.contract.TransactWithResult(opts, result, method, params...)
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerSession) Owner() (common.Address, error) {
	return _ProposalManager.Contract.Owner(&_ProposalManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerCallerSession) Owner() (common.Address, error) {
	return _ProposalManager.Contract.Owner(&_ProposalManager.CallOpts)
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) ProposalCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_proposalCount")
	return *ret0, err
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) ProposalCount() (*big.Int, error) {
	return _ProposalManager.Contract.ProposalCount(&_ProposalManager.CallOpts)
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) ProposalCount() (*big.Int, error) {
	return _ProposalManager.Contract.ProposalCount(&_ProposalManager.CallOpts)
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) ProposalIndex(opts *bind.CallOpts, arg0 uint8, arg1 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_proposalIndex", arg0, arg1)
	return *ret0, err
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) ProposalIndex(arg0 uint8, arg1 common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.ProposalIndex(&_ProposalManager.CallOpts, arg0, arg1)
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) ProposalIndex(arg0 uint8, arg1 common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.ProposalIndex(&_ProposalManager.CallOpts, arg0, arg1)
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerCaller) Proposals(opts *bind.CallOpts, arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	ret := new(struct {
		ResourceId          common.Address
		Proposer            common.Address
		ProposalType        uint8
		BlockNumberInterval *big.Int
		Status              uint8
	})
	out := ret
	err := _ProposalManager.contract.Call(opts, out, "_proposals", arg0)
	return *ret, err
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerSession) Proposals(arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	return _ProposalManager.Contract.Proposals(&_ProposalManager.CallOpts, arg0)
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerCallerSession) Proposals(arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	return _ProposalManager.Contract.Proposals(&_ProposalManager.CallOpts, arg0)
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerCaller) VoteComputer(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_voteComputer")
	return *ret0, err
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerSession) VoteComputer() (common.Address, error) {
	return _ProposalManager.Contract.VoteComputer(&_ProposalManager.CallOpts)
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerCallerSession) VoteComputer() (common.Address, error) {
	return _ProposalManager.Contract.VoteComputer(&_ProposalManager.CallOpts)
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerCaller) Auth(opts *bind.CallOpts, src common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "auth", src)
	return *ret0, err
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerSession) Auth(src common.Address) (bool, error) {
	return _ProposalManager.Contract.Auth(&_ProposalManager.CallOpts, src)
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerCallerSession) Auth(src common.Address) (bool, error) {
	return _ProposalManager.Contract.Auth(&_ProposalManager.CallOpts, src)
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) GetIdByTypeAndResourceId(opts *bind.CallOpts, proposalType uint8, resourceId common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getIdByTypeAndResourceId", proposalType, resourceId)
	return *ret0, err
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) GetIdByTypeAndResourceId(proposalType uint8, resourceId common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.GetIdByTypeAndResourceId(&_ProposalManager.CallOpts, proposalType, resourceId)
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) GetIdByTypeAndResourceId(proposalType uint8, resourceId common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.GetIdByTypeAndResourceId(&_ProposalManager.CallOpts, proposalType, resourceId)
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerCaller) GetProposalInfo(opts *bind.CallOpts, proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	ret := new(struct {
		ResourceId          common.Address
		Proposer            common.Address
		ProposalType        uint8
		BlockNumberInterval *big.Int
		Status              uint8
		AgreeVoters         []common.Address
		AgainstVoters       []common.Address
	})
	out := ret
	err := _ProposalManager.contract.Call(opts, out, "getProposalInfo", proposalId)
	return *ret, err
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerSession) GetProposalInfo(proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	return _ProposalManager.Contract.GetProposalInfo(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalInfo(proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	return _ProposalManager.Contract.GetProposalInfo(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerCaller) GetProposalInfoList(opts *bind.CallOpts, from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	var (
		ret0 = new([]ProposalManagerProposalInfo)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getProposalInfoList", from, to)
	return *ret0, err
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerSession) GetProposalInfoList(from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	return _ProposalManager.Contract.GetProposalInfoList(&_ProposalManager.CallOpts, from, to)
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalInfoList(from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	return _ProposalManager.Contract.GetProposalInfoList(&_ProposalManager.CallOpts, from, to)
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerCaller) GetProposalStatus(opts *bind.CallOpts, proposalId *big.Int) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getProposalStatus", proposalId)
	return *ret0, err
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerSession) GetProposalStatus(proposalId *big.Int) (uint8, error) {
	return _ProposalManager.Contract.GetProposalStatus(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalStatus(proposalId *big.Int) (uint8, error) {
	return _ProposalManager.Contract.GetProposalStatus(&_ProposalManager.CallOpts, proposalId)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerTransactor) Create(opts *bind.TransactOpts, proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "create", proposer, proposalType, resourceId, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncCreate(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "create", proposer, proposalType, resourceId, blockNumberInterval)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerSession) Create(proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Create(&_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

func (_ProposalManager *ProposalManagerSession) AsyncCreate(handler func(*types.Receipt, error), proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncCreate(handler, &_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerTransactorSession) Create(proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Create(&_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncCreate(handler func(*types.Receipt, error), proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncCreate(handler, &_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerTransactor) RefreshProposalStatus(opts *bind.TransactOpts, proposalId *big.Int) (uint8, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "refreshProposalStatus", proposalId)
	return *ret0, transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "refreshProposalStatus", proposalId)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerSession) RefreshProposalStatus(proposalId *big.Int) (uint8, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.RefreshProposalStatus(&_ProposalManager.TransactOpts, proposalId)
}

func (_ProposalManager *ProposalManagerSession) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRefreshProposalStatus(handler, &_ProposalManager.TransactOpts, proposalId)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerTransactorSession) RefreshProposalStatus(proposalId *big.Int) (uint8, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.RefreshProposalStatus(&_ProposalManager.TransactOpts, proposalId)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRefreshProposalStatus(handler, &_ProposalManager.TransactOpts, proposalId)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerTransactor) Revoke(opts *bind.TransactOpts, proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	var ()
	out := &[]interface{}{}
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "revoke", proposalId, voterAddress)
	return transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncRevoke(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "revoke", proposalId, voterAddress)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerSession) Revoke(proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Revoke(&_ProposalManager.TransactOpts, proposalId, voterAddress)
}

func (_ProposalManager *ProposalManagerSession) AsyncRevoke(handler func(*types.Receipt, error), proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRevoke(handler, &_ProposalManager.TransactOpts, proposalId, voterAddress)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerTransactorSession) Revoke(proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Revoke(&_ProposalManager.TransactOpts, proposalId, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncRevoke(handler func(*types.Receipt, error), proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRevoke(handler, &_ProposalManager.TransactOpts, proposalId, voterAddress)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerTransactor) SetOwner(opts *bind.TransactOpts, owner common.Address) (*types.Transaction, *types.Receipt, error) {
	var ()
	out := &[]interface{}{}
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "setOwner", owner)
	return transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncSetOwner(handler func(*types.Receipt, error), opts *bind.TransactOpts, owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "setOwner", owner)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerSession) SetOwner(owner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetOwner(&_ProposalManager.TransactOpts, owner)
}

func (_ProposalManager *ProposalManagerSession) AsyncSetOwner(handler func(*types.Receipt, error), owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetOwner(handler, &_ProposalManager.TransactOpts, owner)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerTransactorSession) SetOwner(owner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetOwner(&_ProposalManager.TransactOpts, owner)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncSetOwner(handler func(*types.Receipt, error), owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetOwner(handler, &_ProposalManager.TransactOpts, owner)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerTransactor) SetVoteComputer(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, *types.Receipt, error) {
	var ()
	out := &[]interface{}{}
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "setVoteComputer", addr)
	return transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncSetVoteComputer(handler func(*types.Receipt, error), opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "setVoteComputer", addr)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerSession) SetVoteComputer(addr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetVoteComputer(&_ProposalManager.TransactOpts, addr)
}

func (_ProposalManager *ProposalManagerSession) AsyncSetVoteComputer(handler func(*types.Receipt, error), addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetVoteComputer(handler, &_ProposalManager.TransactOpts, addr)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerTransactorSession) SetVoteComputer(addr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetVoteComputer(&_ProposalManager.TransactOpts, addr)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncSetVoteComputer(handler func(*types.Receipt, error), addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetVoteComputer(handler, &_ProposalManager.TransactOpts, addr)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerTransactor) Vote(opts *bind.TransactOpts, proposalId *big.Int, agree bool, voterAddress common.Address) (uint8, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	transaction, receipt, err := _ProposalManager.contract.TransactWithResult(opts, out, "vote", proposalId, agree, voterAddress)
	return *ret0, transaction, receipt, err
}

func (_ProposalManager *ProposalManagerTransactor) AsyncVote(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "vote", proposalId, agree, voterAddress)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerSession) Vote(proposalId *big.Int, agree bool, voterAddress common.Address) (uint8, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Vote(&_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

func (_ProposalManager *ProposalManagerSession) AsyncVote(handler func(*types.Receipt, error), proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncVote(handler, &_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerTransactorSession) Vote(proposalId *big.Int, agree bool, voterAddress common.Address) (uint8, *types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Vote(&_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncVote(handler func(*types.Receipt, error), proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncVote(handler, &_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}
