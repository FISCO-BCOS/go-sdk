// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package auth

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/v3/abi"
	"github.com/FISCO-BCOS/go-sdk/v3/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/v3/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
)

// CommitteeManagerABI is the input ABI used to generate the binding from.
const CommitteeManagerABI = "[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"initGovernors\",\"type\":\"address[]\"},{\"internalType\":\"uint32[]\",\"name\":\"weights\",\"type\":\"uint32[]\"},{\"internalType\":\"uint8\",\"name\":\"participatesRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"winRate\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"execResult\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_committee\",\"outputs\":[{\"internalType\":\"contractCommittee\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proposalMgr\",\"outputs\":[{\"internalType\":\"contractProposalManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"openFlag\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createModifyDeployAuthProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createResetAdminProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"node\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createRmNodeProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"node\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"weight\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"addFlag\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createSetConsensusWeightProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"deployAuthType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createSetDeployAuthTypeProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"participatesRate\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"winRate\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createSetRateProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createSetSysConfigProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"weight\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createUpdateGovernorProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"createUpgradeVoteComputerProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"currentproposalId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalType\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isGovernor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"revokeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"agree\",\"type\":\"bool\"}],\"name\":\"voteProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// CommitteeManagerBin is the compiled bytecode used for deploying new contracts.
var CommitteeManagerBin = ""

// DeployCommitteeManager deploys a new contract, binding an instance of CommitteeManager to it.
func DeployCommitteeManager(auth *bind.TransactOpts, backend bind.ContractBackend, initGovernors []common.Address, weights []uint32, participatesRate uint8, winRate uint8) (common.Address, *types.Receipt, *CommitteeManager, error) {
	parsed, err := abi.JSON(strings.NewReader(CommitteeManagerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, receipt, contract, err := bind.DeployContract(auth, parsed, common.FromHex(CommitteeManagerBin), backend, initGovernors, weights, participatesRate, winRate)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, receipt, &CommitteeManager{CommitteeManagerCaller: CommitteeManagerCaller{contract: contract}, CommitteeManagerTransactor: CommitteeManagerTransactor{contract: contract}, CommitteeManagerFilterer: CommitteeManagerFilterer{contract: contract}}, nil
}

func AsyncDeployCommitteeManager(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend, initGovernors []common.Address, weights []uint32, participatesRate uint8, winRate uint8) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(CommitteeManagerABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(CommitteeManagerBin), backend, initGovernors, weights, participatesRate, winRate)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// CommitteeManager is an auto generated Go binding around a Solidity contract.
type CommitteeManager struct {
	CommitteeManagerCaller     // Read-only binding to the contract
	CommitteeManagerTransactor // Write-only binding to the contract
	CommitteeManagerFilterer   // Log filterer for contract events
}

// CommitteeManagerCaller is an auto generated read-only Go binding around a Solidity contract.
type CommitteeManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CommitteeManagerTransactor is an auto generated write-only Go binding around a Solidity contract.
type CommitteeManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CommitteeManagerFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type CommitteeManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// CommitteeManagerSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type CommitteeManagerSession struct {
	Contract     *CommitteeManager // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// CommitteeManagerCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type CommitteeManagerCallerSession struct {
	Contract *CommitteeManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts           // Call options to use throughout this session
}

// CommitteeManagerTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type CommitteeManagerTransactorSession struct {
	Contract     *CommitteeManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts           // Transaction auth options to use throughout this session
}

// CommitteeManagerRaw is an auto generated low-level Go binding around a Solidity contract.
type CommitteeManagerRaw struct {
	Contract *CommitteeManager // Generic contract binding to access the raw methods on
}

// CommitteeManagerCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type CommitteeManagerCallerRaw struct {
	Contract *CommitteeManagerCaller // Generic read-only contract binding to access the raw methods on
}

// CommitteeManagerTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type CommitteeManagerTransactorRaw struct {
	Contract *CommitteeManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewCommitteeManager creates a new instance of CommitteeManager, bound to a specific deployed contract.
func NewCommitteeManager(address common.Address, backend bind.ContractBackend) (*CommitteeManager, error) {
	contract, err := bindCommitteeManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &CommitteeManager{CommitteeManagerCaller: CommitteeManagerCaller{contract: contract}, CommitteeManagerTransactor: CommitteeManagerTransactor{contract: contract}, CommitteeManagerFilterer: CommitteeManagerFilterer{contract: contract}}, nil
}

// NewCommitteeManagerCaller creates a new read-only instance of CommitteeManager, bound to a specific deployed contract.
func NewCommitteeManagerCaller(address common.Address, caller bind.ContractCaller) (*CommitteeManagerCaller, error) {
	contract, err := bindCommitteeManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &CommitteeManagerCaller{contract: contract}, nil
}

// NewCommitteeManagerTransactor creates a new write-only instance of CommitteeManager, bound to a specific deployed contract.
func NewCommitteeManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*CommitteeManagerTransactor, error) {
	contract, err := bindCommitteeManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &CommitteeManagerTransactor{contract: contract}, nil
}

// NewCommitteeManagerFilterer creates a new log filterer instance of CommitteeManager, bound to a specific deployed contract.
func NewCommitteeManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*CommitteeManagerFilterer, error) {
	contract, err := bindCommitteeManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &CommitteeManagerFilterer{contract: contract}, nil
}

// bindCommitteeManager binds a generic wrapper to an already deployed contract.
func bindCommitteeManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(CommitteeManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CommitteeManager *CommitteeManagerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CommitteeManager.Contract.CommitteeManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CommitteeManager *CommitteeManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CommitteeManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CommitteeManager *CommitteeManagerRaw) TransactWithResult(opts *bind.TransactOpts, result interface{}, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CommitteeManagerTransactor.contract.TransactWithResult(opts, result, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_CommitteeManager *CommitteeManagerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _CommitteeManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_CommitteeManager *CommitteeManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_CommitteeManager *CommitteeManagerTransactorRaw) TransactWithResult(opts *bind.TransactOpts, result interface{}, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.contract.TransactWithResult(opts, result, method, params...)
}

// Committee is a free data retrieval call binding the contract method 0x185c1587.
//
// Solidity: function _committee() constant returns(address)
func (_CommitteeManager *CommitteeManagerCaller) Committee(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CommitteeManager.contract.Call(opts, out, "_committee")
	return *ret0, err
}

// Committee is a free data retrieval call binding the contract method 0x185c1587.
//
// Solidity: function _committee() constant returns(address)
func (_CommitteeManager *CommitteeManagerSession) Committee() (common.Address, error) {
	return _CommitteeManager.Contract.Committee(&_CommitteeManager.CallOpts)
}

// Committee is a free data retrieval call binding the contract method 0x185c1587.
//
// Solidity: function _committee() constant returns(address)
func (_CommitteeManager *CommitteeManagerCallerSession) Committee() (common.Address, error) {
	return _CommitteeManager.Contract.Committee(&_CommitteeManager.CallOpts)
}

// ProposalMgr is a free data retrieval call binding the contract method 0xf675fdaa.
//
// Solidity: function _proposalMgr() constant returns(address)
func (_CommitteeManager *CommitteeManagerCaller) ProposalMgr(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _CommitteeManager.contract.Call(opts, out, "_proposalMgr")
	return *ret0, err
}

// ProposalMgr is a free data retrieval call binding the contract method 0xf675fdaa.
//
// Solidity: function _proposalMgr() constant returns(address)
func (_CommitteeManager *CommitteeManagerSession) ProposalMgr() (common.Address, error) {
	return _CommitteeManager.Contract.ProposalMgr(&_CommitteeManager.CallOpts)
}

// ProposalMgr is a free data retrieval call binding the contract method 0xf675fdaa.
//
// Solidity: function _proposalMgr() constant returns(address)
func (_CommitteeManager *CommitteeManagerCallerSession) ProposalMgr() (common.Address, error) {
	return _CommitteeManager.Contract.ProposalMgr(&_CommitteeManager.CallOpts)
}

// GetProposalType is a free data retrieval call binding the contract method 0xd978ffba.
//
// Solidity: function getProposalType(uint256 proposalId) constant returns(uint8)
func (_CommitteeManager *CommitteeManagerCaller) GetProposalType(opts *bind.CallOpts, proposalId *big.Int) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _CommitteeManager.contract.Call(opts, out, "getProposalType", proposalId)
	return *ret0, err
}

// GetProposalType is a free data retrieval call binding the contract method 0xd978ffba.
//
// Solidity: function getProposalType(uint256 proposalId) constant returns(uint8)
func (_CommitteeManager *CommitteeManagerSession) GetProposalType(proposalId *big.Int) (uint8, error) {
	return _CommitteeManager.Contract.GetProposalType(&_CommitteeManager.CallOpts, proposalId)
}

// GetProposalType is a free data retrieval call binding the contract method 0xd978ffba.
//
// Solidity: function getProposalType(uint256 proposalId) constant returns(uint8)
func (_CommitteeManager *CommitteeManagerCallerSession) GetProposalType(proposalId *big.Int) (uint8, error) {
	return _CommitteeManager.Contract.GetProposalType(&_CommitteeManager.CallOpts, proposalId)
}

// IsGovernor is a free data retrieval call binding the contract method 0xe43581b8.
//
// Solidity: function isGovernor(address account) constant returns(bool)
func (_CommitteeManager *CommitteeManagerCaller) IsGovernor(opts *bind.CallOpts, account common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _CommitteeManager.contract.Call(opts, out, "isGovernor", account)
	return *ret0, err
}

// IsGovernor is a free data retrieval call binding the contract method 0xe43581b8.
//
// Solidity: function isGovernor(address account) constant returns(bool)
func (_CommitteeManager *CommitteeManagerSession) IsGovernor(account common.Address) (bool, error) {
	return _CommitteeManager.Contract.IsGovernor(&_CommitteeManager.CallOpts, account)
}

// IsGovernor is a free data retrieval call binding the contract method 0xe43581b8.
//
// Solidity: function isGovernor(address account) constant returns(bool)
func (_CommitteeManager *CommitteeManagerCallerSession) IsGovernor(account common.Address) (bool, error) {
	return _CommitteeManager.Contract.IsGovernor(&_CommitteeManager.CallOpts, account)
}

// CreateModifyDeployAuthProposal is a paid mutator transaction binding the contract method 0x6ba4790c.
//
// Solidity: function createModifyDeployAuthProposal(address account, bool openFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateModifyDeployAuthProposal(opts *bind.TransactOpts, account common.Address, openFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createModifyDeployAuthProposal", account, openFlag, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateModifyDeployAuthProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, account common.Address, openFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createModifyDeployAuthProposal", account, openFlag, blockNumberInterval)
}

// CreateModifyDeployAuthProposal is a paid mutator transaction binding the contract method 0x6ba4790c.
//
// Solidity: function createModifyDeployAuthProposal(address account, bool openFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateModifyDeployAuthProposal(account common.Address, openFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateModifyDeployAuthProposal(&_CommitteeManager.TransactOpts, account, openFlag, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateModifyDeployAuthProposal(handler func(*types.Receipt, error), account common.Address, openFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateModifyDeployAuthProposal(handler, &_CommitteeManager.TransactOpts, account, openFlag, blockNumberInterval)
}

// CreateModifyDeployAuthProposal is a paid mutator transaction binding the contract method 0x6ba4790c.
//
// Solidity: function createModifyDeployAuthProposal(address account, bool openFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateModifyDeployAuthProposal(account common.Address, openFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateModifyDeployAuthProposal(&_CommitteeManager.TransactOpts, account, openFlag, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateModifyDeployAuthProposal(handler func(*types.Receipt, error), account common.Address, openFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateModifyDeployAuthProposal(handler, &_CommitteeManager.TransactOpts, account, openFlag, blockNumberInterval)
}

// CreateResetAdminProposal is a paid mutator transaction binding the contract method 0x7475f00f.
//
// Solidity: function createResetAdminProposal(address newAdmin, address contractAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateResetAdminProposal(opts *bind.TransactOpts, newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createResetAdminProposal", newAdmin, contractAddr, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateResetAdminProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createResetAdminProposal", newAdmin, contractAddr, blockNumberInterval)
}

// CreateResetAdminProposal is a paid mutator transaction binding the contract method 0x7475f00f.
//
// Solidity: function createResetAdminProposal(address newAdmin, address contractAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateResetAdminProposal(newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateResetAdminProposal(&_CommitteeManager.TransactOpts, newAdmin, contractAddr, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateResetAdminProposal(handler func(*types.Receipt, error), newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateResetAdminProposal(handler, &_CommitteeManager.TransactOpts, newAdmin, contractAddr, blockNumberInterval)
}

// CreateResetAdminProposal is a paid mutator transaction binding the contract method 0x7475f00f.
//
// Solidity: function createResetAdminProposal(address newAdmin, address contractAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateResetAdminProposal(newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateResetAdminProposal(&_CommitteeManager.TransactOpts, newAdmin, contractAddr, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateResetAdminProposal(handler func(*types.Receipt, error), newAdmin common.Address, contractAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateResetAdminProposal(handler, &_CommitteeManager.TransactOpts, newAdmin, contractAddr, blockNumberInterval)
}

// CreateRmNodeProposal is a paid mutator transaction binding the contract method 0x65012582.
//
// Solidity: function createRmNodeProposal(string node, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateRmNodeProposal(opts *bind.TransactOpts, node string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createRmNodeProposal", node, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateRmNodeProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, node string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createRmNodeProposal", node, blockNumberInterval)
}

// CreateRmNodeProposal is a paid mutator transaction binding the contract method 0x65012582.
//
// Solidity: function createRmNodeProposal(string node, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateRmNodeProposal(node string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateRmNodeProposal(&_CommitteeManager.TransactOpts, node, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateRmNodeProposal(handler func(*types.Receipt, error), node string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateRmNodeProposal(handler, &_CommitteeManager.TransactOpts, node, blockNumberInterval)
}

// CreateRmNodeProposal is a paid mutator transaction binding the contract method 0x65012582.
//
// Solidity: function createRmNodeProposal(string node, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateRmNodeProposal(node string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateRmNodeProposal(&_CommitteeManager.TransactOpts, node, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateRmNodeProposal(handler func(*types.Receipt, error), node string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateRmNodeProposal(handler, &_CommitteeManager.TransactOpts, node, blockNumberInterval)
}

// CreateSetConsensusWeightProposal is a paid mutator transaction binding the contract method 0x9e3f4f4e.
//
// Solidity: function createSetConsensusWeightProposal(string node, uint32 weight, bool addFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateSetConsensusWeightProposal(opts *bind.TransactOpts, node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createSetConsensusWeightProposal", node, weight, addFlag, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateSetConsensusWeightProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createSetConsensusWeightProposal", node, weight, addFlag, blockNumberInterval)
}

// CreateSetConsensusWeightProposal is a paid mutator transaction binding the contract method 0x9e3f4f4e.
//
// Solidity: function createSetConsensusWeightProposal(string node, uint32 weight, bool addFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateSetConsensusWeightProposal(node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetConsensusWeightProposal(&_CommitteeManager.TransactOpts, node, weight, addFlag, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateSetConsensusWeightProposal(handler func(*types.Receipt, error), node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetConsensusWeightProposal(handler, &_CommitteeManager.TransactOpts, node, weight, addFlag, blockNumberInterval)
}

// CreateSetConsensusWeightProposal is a paid mutator transaction binding the contract method 0x9e3f4f4e.
//
// Solidity: function createSetConsensusWeightProposal(string node, uint32 weight, bool addFlag, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateSetConsensusWeightProposal(node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetConsensusWeightProposal(&_CommitteeManager.TransactOpts, node, weight, addFlag, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateSetConsensusWeightProposal(handler func(*types.Receipt, error), node string, weight uint32, addFlag bool, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetConsensusWeightProposal(handler, &_CommitteeManager.TransactOpts, node, weight, addFlag, blockNumberInterval)
}

// CreateSetDeployAuthTypeProposal is a paid mutator transaction binding the contract method 0x614235f3.
//
// Solidity: function createSetDeployAuthTypeProposal(uint8 deployAuthType, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateSetDeployAuthTypeProposal(opts *bind.TransactOpts, deployAuthType uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createSetDeployAuthTypeProposal", deployAuthType, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateSetDeployAuthTypeProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, deployAuthType uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createSetDeployAuthTypeProposal", deployAuthType, blockNumberInterval)
}

// CreateSetDeployAuthTypeProposal is a paid mutator transaction binding the contract method 0x614235f3.
//
// Solidity: function createSetDeployAuthTypeProposal(uint8 deployAuthType, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateSetDeployAuthTypeProposal(deployAuthType uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetDeployAuthTypeProposal(&_CommitteeManager.TransactOpts, deployAuthType, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateSetDeployAuthTypeProposal(handler func(*types.Receipt, error), deployAuthType uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetDeployAuthTypeProposal(handler, &_CommitteeManager.TransactOpts, deployAuthType, blockNumberInterval)
}

// CreateSetDeployAuthTypeProposal is a paid mutator transaction binding the contract method 0x614235f3.
//
// Solidity: function createSetDeployAuthTypeProposal(uint8 deployAuthType, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateSetDeployAuthTypeProposal(deployAuthType uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetDeployAuthTypeProposal(&_CommitteeManager.TransactOpts, deployAuthType, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateSetDeployAuthTypeProposal(handler func(*types.Receipt, error), deployAuthType uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetDeployAuthTypeProposal(handler, &_CommitteeManager.TransactOpts, deployAuthType, blockNumberInterval)
}

// CreateSetRateProposal is a paid mutator transaction binding the contract method 0x03f19159.
//
// Solidity: function createSetRateProposal(uint8 participatesRate, uint8 winRate, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateSetRateProposal(opts *bind.TransactOpts, participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createSetRateProposal", participatesRate, winRate, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateSetRateProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createSetRateProposal", participatesRate, winRate, blockNumberInterval)
}

// CreateSetRateProposal is a paid mutator transaction binding the contract method 0x03f19159.
//
// Solidity: function createSetRateProposal(uint8 participatesRate, uint8 winRate, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateSetRateProposal(participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetRateProposal(&_CommitteeManager.TransactOpts, participatesRate, winRate, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateSetRateProposal(handler func(*types.Receipt, error), participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetRateProposal(handler, &_CommitteeManager.TransactOpts, participatesRate, winRate, blockNumberInterval)
}

// CreateSetRateProposal is a paid mutator transaction binding the contract method 0x03f19159.
//
// Solidity: function createSetRateProposal(uint8 participatesRate, uint8 winRate, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateSetRateProposal(participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetRateProposal(&_CommitteeManager.TransactOpts, participatesRate, winRate, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateSetRateProposal(handler func(*types.Receipt, error), participatesRate uint8, winRate uint8, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetRateProposal(handler, &_CommitteeManager.TransactOpts, participatesRate, winRate, blockNumberInterval)
}

// CreateSetSysConfigProposal is a paid mutator transaction binding the contract method 0x7a25132d.
//
// Solidity: function createSetSysConfigProposal(string key, string value, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateSetSysConfigProposal(opts *bind.TransactOpts, key string, value string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createSetSysConfigProposal", key, value, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateSetSysConfigProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, key string, value string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createSetSysConfigProposal", key, value, blockNumberInterval)
}

// CreateSetSysConfigProposal is a paid mutator transaction binding the contract method 0x7a25132d.
//
// Solidity: function createSetSysConfigProposal(string key, string value, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateSetSysConfigProposal(key string, value string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetSysConfigProposal(&_CommitteeManager.TransactOpts, key, value, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateSetSysConfigProposal(handler func(*types.Receipt, error), key string, value string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetSysConfigProposal(handler, &_CommitteeManager.TransactOpts, key, value, blockNumberInterval)
}

// CreateSetSysConfigProposal is a paid mutator transaction binding the contract method 0x7a25132d.
//
// Solidity: function createSetSysConfigProposal(string key, string value, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateSetSysConfigProposal(key string, value string, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateSetSysConfigProposal(&_CommitteeManager.TransactOpts, key, value, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateSetSysConfigProposal(handler func(*types.Receipt, error), key string, value string, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateSetSysConfigProposal(handler, &_CommitteeManager.TransactOpts, key, value, blockNumberInterval)
}

// CreateUpdateGovernorProposal is a paid mutator transaction binding the contract method 0x3234f0e6.
//
// Solidity: function createUpdateGovernorProposal(address account, uint32 weight, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateUpdateGovernorProposal(opts *bind.TransactOpts, account common.Address, weight uint32, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createUpdateGovernorProposal", account, weight, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateUpdateGovernorProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, account common.Address, weight uint32, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createUpdateGovernorProposal", account, weight, blockNumberInterval)
}

// CreateUpdateGovernorProposal is a paid mutator transaction binding the contract method 0x3234f0e6.
//
// Solidity: function createUpdateGovernorProposal(address account, uint32 weight, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateUpdateGovernorProposal(account common.Address, weight uint32, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateUpdateGovernorProposal(&_CommitteeManager.TransactOpts, account, weight, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateUpdateGovernorProposal(handler func(*types.Receipt, error), account common.Address, weight uint32, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateUpdateGovernorProposal(handler, &_CommitteeManager.TransactOpts, account, weight, blockNumberInterval)
}

// CreateUpdateGovernorProposal is a paid mutator transaction binding the contract method 0x3234f0e6.
//
// Solidity: function createUpdateGovernorProposal(address account, uint32 weight, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateUpdateGovernorProposal(account common.Address, weight uint32, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateUpdateGovernorProposal(&_CommitteeManager.TransactOpts, account, weight, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateUpdateGovernorProposal(handler func(*types.Receipt, error), account common.Address, weight uint32, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateUpdateGovernorProposal(handler, &_CommitteeManager.TransactOpts, account, weight, blockNumberInterval)
}

// CreateUpgradeVoteComputerProposal is a paid mutator transaction binding the contract method 0x7222b4a8.
//
// Solidity: function createUpgradeVoteComputerProposal(address newAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactor) CreateUpgradeVoteComputerProposal(opts *bind.TransactOpts, newAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "createUpgradeVoteComputerProposal", newAddr, blockNumberInterval)
	return *ret0, transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncCreateUpgradeVoteComputerProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, newAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "createUpgradeVoteComputerProposal", newAddr, blockNumberInterval)
}

// CreateUpgradeVoteComputerProposal is a paid mutator transaction binding the contract method 0x7222b4a8.
//
// Solidity: function createUpgradeVoteComputerProposal(address newAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerSession) CreateUpgradeVoteComputerProposal(newAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateUpgradeVoteComputerProposal(&_CommitteeManager.TransactOpts, newAddr, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncCreateUpgradeVoteComputerProposal(handler func(*types.Receipt, error), newAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateUpgradeVoteComputerProposal(handler, &_CommitteeManager.TransactOpts, newAddr, blockNumberInterval)
}

// CreateUpgradeVoteComputerProposal is a paid mutator transaction binding the contract method 0x7222b4a8.
//
// Solidity: function createUpgradeVoteComputerProposal(address newAddr, uint256 blockNumberInterval) returns(uint256 currentproposalId)
func (_CommitteeManager *CommitteeManagerTransactorSession) CreateUpgradeVoteComputerProposal(newAddr common.Address, blockNumberInterval *big.Int) (*big.Int, *types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.CreateUpgradeVoteComputerProposal(&_CommitteeManager.TransactOpts, newAddr, blockNumberInterval)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncCreateUpgradeVoteComputerProposal(handler func(*types.Receipt, error), newAddr common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncCreateUpgradeVoteComputerProposal(handler, &_CommitteeManager.TransactOpts, newAddr, blockNumberInterval)
}

// RevokeProposal is a paid mutator transaction binding the contract method 0x85a6a091.
//
// Solidity: function revokeProposal(uint256 proposalId) returns()
func (_CommitteeManager *CommitteeManagerTransactor) RevokeProposal(opts *bind.TransactOpts, proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	var ()
	out := &[]interface{}{}
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "revokeProposal", proposalId)
	return transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncRevokeProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "revokeProposal", proposalId)
}

// RevokeProposal is a paid mutator transaction binding the contract method 0x85a6a091.
//
// Solidity: function revokeProposal(uint256 proposalId) returns()
func (_CommitteeManager *CommitteeManagerSession) RevokeProposal(proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.RevokeProposal(&_CommitteeManager.TransactOpts, proposalId)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncRevokeProposal(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncRevokeProposal(handler, &_CommitteeManager.TransactOpts, proposalId)
}

// RevokeProposal is a paid mutator transaction binding the contract method 0x85a6a091.
//
// Solidity: function revokeProposal(uint256 proposalId) returns()
func (_CommitteeManager *CommitteeManagerTransactorSession) RevokeProposal(proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.RevokeProposal(&_CommitteeManager.TransactOpts, proposalId)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncRevokeProposal(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncRevokeProposal(handler, &_CommitteeManager.TransactOpts, proposalId)
}

// VoteProposal is a paid mutator transaction binding the contract method 0xbcfb9b61.
//
// Solidity: function voteProposal(uint256 proposalId, bool agree) returns()
func (_CommitteeManager *CommitteeManagerTransactor) VoteProposal(opts *bind.TransactOpts, proposalId *big.Int, agree bool) (*types.Transaction, *types.Receipt, error) {
	var ()
	out := &[]interface{}{}
	transaction, receipt, err := _CommitteeManager.contract.TransactWithResult(opts, out, "voteProposal", proposalId, agree)
	return transaction, receipt, err
}

func (_CommitteeManager *CommitteeManagerTransactor) AsyncVoteProposal(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int, agree bool) (*types.Transaction, error) {
	return _CommitteeManager.contract.AsyncTransact(opts, handler, "voteProposal", proposalId, agree)
}

// VoteProposal is a paid mutator transaction binding the contract method 0xbcfb9b61.
//
// Solidity: function voteProposal(uint256 proposalId, bool agree) returns()
func (_CommitteeManager *CommitteeManagerSession) VoteProposal(proposalId *big.Int, agree bool) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.VoteProposal(&_CommitteeManager.TransactOpts, proposalId, agree)
}

func (_CommitteeManager *CommitteeManagerSession) AsyncVoteProposal(handler func(*types.Receipt, error), proposalId *big.Int, agree bool) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncVoteProposal(handler, &_CommitteeManager.TransactOpts, proposalId, agree)
}

// VoteProposal is a paid mutator transaction binding the contract method 0xbcfb9b61.
//
// Solidity: function voteProposal(uint256 proposalId, bool agree) returns()
func (_CommitteeManager *CommitteeManagerTransactorSession) VoteProposal(proposalId *big.Int, agree bool) (*types.Transaction, *types.Receipt, error) {
	return _CommitteeManager.Contract.VoteProposal(&_CommitteeManager.TransactOpts, proposalId, agree)
}

func (_CommitteeManager *CommitteeManagerTransactorSession) AsyncVoteProposal(handler func(*types.Receipt, error), proposalId *big.Int, agree bool) (*types.Transaction, error) {
	return _CommitteeManager.Contract.AsyncVoteProposal(handler, &_CommitteeManager.TransactOpts, proposalId, agree)
}

// CommitteeManagerExecResult represents a ExecResult event raised by the CommitteeManager contract.
type CommitteeManagerExecResult struct {
	Arg0 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// WatchExecResult is a free log subscription operation binding the contract event 0x7251e13f6f51fdfe60094817f80310366d2e1148fe8a46cb475b582d35bfdea8.
//
// Solidity: event execResult(int256 )
func (_CommitteeManager *CommitteeManagerFilterer) WatchExecResult(fromBlock *uint64, handler func(int, []types.Log)) (string, error) {
	return _CommitteeManager.contract.WatchLogs(fromBlock, handler, "execResult")
}

func (_CommitteeManager *CommitteeManagerFilterer) WatchAllExecResult(fromBlock *uint64, handler func(int, []types.Log)) (string, error) {
	return _CommitteeManager.contract.WatchLogs(fromBlock, handler, "execResult")
}

// ParseExecResult is a log parse operation binding the contract event 0x7251e13f6f51fdfe60094817f80310366d2e1148fe8a46cb475b582d35bfdea8.
//
// Solidity: event execResult(int256 )
func (_CommitteeManager *CommitteeManagerFilterer) ParseExecResult(log types.Log) (*CommitteeManagerExecResult, error) {
	event := new(CommitteeManagerExecResult)
	if err := _CommitteeManager.contract.UnpackLog(event, "execResult", log); err != nil {
		return nil, err
	}
	return event, nil
}

// WatchExecResult is a free log subscription operation binding the contract event 0x7251e13f6f51fdfe60094817f80310366d2e1148fe8a46cb475b582d35bfdea8.
//
// Solidity: event execResult(int256 )
func (_CommitteeManager *CommitteeManagerSession) WatchExecResult(fromBlock *uint64, handler func(int, []types.Log)) (string, error) {
	return _CommitteeManager.Contract.WatchExecResult(fromBlock, handler)
}

func (_CommitteeManager *CommitteeManagerSession) WatchAllExecResult(fromBlock *uint64, handler func(int, []types.Log)) (string, error) {
	return _CommitteeManager.Contract.WatchAllExecResult(fromBlock, handler)
}

// ParseExecResult is a log parse operation binding the contract event 0x7251e13f6f51fdfe60094817f80310366d2e1148fe8a46cb475b582d35bfdea8.
//
// Solidity: event execResult(int256 )
func (_CommitteeManager *CommitteeManagerSession) ParseExecResult(log types.Log) (*CommitteeManagerExecResult, error) {
	return _CommitteeManager.Contract.ParseExecResult(log)
}
