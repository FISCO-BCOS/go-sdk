// Copyright 2014 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package types

import (
	"github.com/ethereum/go-ethereum/common"
)

//go:generate gencodec -type Log -field-override logMarshaling -out gen_log_json.go

// Log represents a contract log event. These events are generated by the LOG opcode and
// stored/indexed by the node.
type Log struct {
	// Consensus fields:
	// address of the contract that generated the event
	Address common.Address `json:"address" gencodec:"required"`
	// list of topics provided by the contract.
	Topics []common.Hash `json:"topics" gencodec:"required"`
	// supplied by the contract, usually ABI-encoded
	Data []byte `json:"data" gencodec:"required"`

	// Derived fields. These fields are filled in by the node
	// but not secured by consensus.
	// block in which the transaction was included
	BlockNumber uint64 `json:"blockNumber"`
	// hash of the transaction
	TxHash common.Hash `json:"transactionHash" gencodec:"required"`
	// index of the transaction in the block
	TxIndex uint `json:"transactionIndex" gencodec:"required"`
	// // hash of the block in which the transaction was included
	// BlockHash common.Hash `json:"blockHash"`
	// index of the log in the block
	Index uint `json:"logIndex" gencodec:"required"`

	// // The Removed field is true if this log was reverted due to a chain reorganisation.
	// // You must pay attention to this field if you receive logs through a filter query.
	// Removed bool `json:"removed"`
}

type EventLogParams struct {
	FromBlock int64    `json:"fromBlock"`
	ToBlock   int64    `json:"toBlock"`
	Addresses []string `json:"addresses"`
	Topics    []string `json:"topics"`
}

// NewLog is used for the receipt
type NewLog struct {
	BlockNumber string `json:"blockNumber"`
	// Consensus fields:
	// address of the contract that generated the event
	Address string `json:"address"`
	// supplied by the contract, usually ABI-encoded
	Data string `json:"data"`
	// list of topics provided by the contract.
	Topics []string `json:"topics"`
}
