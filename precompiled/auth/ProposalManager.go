// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package auth

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
)

// ProposalManagerProposalInfo is an auto generated low-level Go binding around an user-defined struct.
type ProposalManagerProposalInfo struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}

// ProposalManagerABI is the input ABI used to generate the binding from.
const ProposalManagerABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"committeeMgrAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"committeeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_proposalIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_proposals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_voteComputer\",\"outputs\":[{\"internalType\":\"contractVoteComputerTemplate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"}],\"name\":\"auth\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"}],\"name\":\"getIdByTypeAndResourceId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"agreeVoters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"againstVoters\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"from\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"to\",\"type\":\"uint256\"}],\"name\":\"getProposalInfoList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"resourceId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"proposalType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"blockNumberInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address[]\",\"name\":\"agreeVoters\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"againstVoters\",\"type\":\"address[]\"}],\"internalType\":\"structProposalManager.ProposalInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposalStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"refreshProposalStatus\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setVoteComputer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"agree\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"}],\"name\":\"vote\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// ProposalManagerBin is the compiled bytecode used for deploying new contracts.
var ProposalManagerBin = "0x60806040523480156200001157600080fd5b50604051620035163803806200351683398181016040528101906200003791906200011f565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081816040516200008790620000fa565b6200009492919062000171565b604051809103906000f080158015620000b1573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001ec565b610d4180620027d583390190565b6000815190506200011981620001d2565b92915050565b600080604083850312156200013357600080fd5b6000620001438582860162000108565b9250506020620001568582860162000108565b9150509250929050565b6200016b816200019e565b82525050565b600060408201905062000188600083018562000160565b62000197602083018462000160565b9392505050565b6000620001ab82620001b2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001dd816200019e565b8114620001e957600080fd5b50565b6125d980620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063401853b711610097578063bc903cb811610066578063bc903cb8146102e9578063cd5d21181461031f578063dde248e31461034f578063fcf81c141461037f57610100565b8063401853b71461024d5780636d23cd581461027d5780636f2904cc146102ad578063b2bdfa7b146102cb57610100565b806320d154da116100d357806320d154da146101b5578063290bc797146101d15780632c3956fe146101ed578063315ce5e21461021d57610100565b80630a4948401461010557806313af40351461013957806319dcd07e146101555780631cc05cbc14610185575b600080fd5b61011f600480360381019061011a9190611a25565b61039d565b6040516101309594939291906120fe565b60405180910390f35b610153600480360381019061014e9190611999565b61042d565b005b61016f600480360381019061016a9190611a25565b6104b8565b60405161017c9190612398565b60405180910390f35b61019f600480360381019061019a9190611b3e565b6105aa565b6040516101ac919061237d565b60405180910390f35b6101cf60048036038101906101ca9190611a4e565b6105cf565b005b6101eb60048036038101906101e69190611999565b610731565b005b610207600480360381019061020291906119c2565b6107bd565b604051610214919061237d565b60405180910390f35b61023760048036038101906102329190611a8a565b610b2a565b6040516102449190612398565b60405180910390f35b61026760048036038101906102629190611a25565b611079565b6040516102749190612398565b60405180910390f35b61029760048036038101906102929190611b3e565b6110a6565b6040516102a4919061237d565b60405180910390f35b6102b5611107565b6040516102c2919061237d565b60405180910390f35b6102d361110d565b6040516102e091906120e3565b60405180910390f35b61030360048036038101906102fe9190611a25565b611132565b6040516103169796959493929190612151565b60405180910390f35b61033960048036038101906103349190611999565b6112f3565b6040516103469190612227565b60405180910390f35b61036960048036038101906103649190611ad9565b61139a565b6040516103769190612205565b60405180910390f35b610387611715565b6040516103949190612242565b60405180910390f35b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030160009054906101000a900460ff16905085565b610436336112f3565b610475576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046c9061233d565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008160006003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051c9061225d565b60405180910390fd5b600060036000858152602001908152602001600020905060018160030160009054906101000a900460ff1660ff16141561058e57806002015443111561058d5760058160030160006101000a81548160ff021916908360ff16021790555060059250506105a4565b5b8060030160009054906101000a900460ff169250505b50919050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6105d8336112f3565b610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e9061233d565b60405180910390fd5b60006003600084815260200190815260200160002090506001610639846104b8565b60ff161461067c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610673906122dd565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461070e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107059061227d565b60405180910390fd5b60048160030160006101000a81548160ff021916908360ff160217905550505050565b61073a336112f3565b610779576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107709061233d565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60006107c8336112f3565b610807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fe9061233d565b60405180910390fd5b6000600460008660ff1660ff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff16141561089c5761089a816104b8565b505b60016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd906122fd565b60405180910390fd5b6002600081548092919060010191905055506000600254905060608061092a6117f4565b6040518060e001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018b73ffffffffffffffffffffffffffffffffffffffff1681526020018a60ff1681526020018843018152602001600160ff168152602001848152602001838152509050806003600086815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360ff1602179055506060820151816002015560808201518160030160006101000a81548160ff021916908360ff16021790555060a0820151816004019080519060200190610a9e929190611863565b5060c0820151816005019080519060200190610abb929190611863565b5090505083600460008b60ff1660ff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508395505050505050949350505050565b6000610b35336112f3565b610b74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6b9061233d565b60405180910390fd5b8360006003600083815260200190815260200160002060030160009054906101000a900460ff1660ff161415610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd69061225d565b60405180910390fd5b8460016003600083815260200190815260200160002060030160009054906101000a900460ff1660ff1614610c49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c409061235d565b60405180910390fd5b6000600360008881526020019081526020016000209050610e81816040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff16815260200160048201805480602002602001604051908101604052809291908181526020018280548015610de457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610d9a575b5050505050815260200160058201805480602002602001604051908101604052809291908181526020018280548015610e7257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610e28575b5050505050815250508661173b565b15610ec1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb89061229d565b60405180910390fd5b8515610f315780600401859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f97565b80600501859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166353bfcf2f83600401846005016040518363ffffffff1660e01b8152600401610ffc9291906121ce565b60206040518083038186803b15801561101457600080fd5b505afa158015611028573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104c9190611b15565b9050808260030160006101000a81548160ff021916908360ff160217905550809450505050509392505050565b60006003600083815260200190815260200160002060030160009054906101000a900460ff169050919050565b6000600460008460ff1660ff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008060006060806000600360008a815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1697508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1696508060010160149054906101000a900460ff169550806002015494508060030160009054906101000a900460ff1693508060040180548060200260200160405190810160405280929190818152602001828054801561125557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161120b575b50505050509250806005018054806020026020016040519081016040528092919081815260200182805480156112e057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611296575b5050505050915050919395979092949650565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113325760019050611395565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113905760019050611395565b600090505b919050565b60606002548311156113e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d8906122bd565b60405180910390fd5b81831115611424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141b9061231d565b60405180910390fd5b6002548211156114345760025491505b600183101561144257600192505b606060018484030167ffffffffffffffff8111801561146057600080fd5b5060405190808252806020026020018201604052801561149a57816020015b6114876117f4565b81526020019060019003908161147f5790505b509050600080905060008590505b848111611709576000600360008381526020019081526020016000209050806040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660ff1660ff168152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016004820180548060200260200160405190810160405280929190818152602001828054801561164757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116115fd575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156116d557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161168b575b5050505050815250508484806001019550815181106116f057fe5b60200260200101819052505080806001019150506114a8565b50819250505092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061174b8360a0015183611779565b80611760575061175f8360c0015183611779565b5b1561176e5760019050611773565b600090505b92915050565b600080600090505b83518110156117e85783818151811061179657fe5b602002602001015173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156117db5760019150506117ee565b8080600101915050611781565b50600090505b92915050565b6040518060e00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600060ff16815260200160008152602001600060ff16815260200160608152602001606081525090565b8280548282559060005260206000209081019282156118dc579160200282015b828111156118db5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611883565b5b5090506118e991906118ed565b5090565b61192d91905b8082111561192957600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055506001016118f3565b5090565b90565b60008135905061193f81612547565b92915050565b6000813590506119548161255e565b92915050565b60008135905061196981612575565b92915050565b60008135905061197e8161258c565b92915050565b6000815190506119938161258c565b92915050565b6000602082840312156119ab57600080fd5b60006119b984828501611930565b91505092915050565b600080600080608085870312156119d857600080fd5b60006119e687828801611930565b94505060206119f78782880161196f565b9350506040611a0887828801611930565b9250506060611a198782880161195a565b91505092959194509250565b600060208284031215611a3757600080fd5b6000611a458482850161195a565b91505092915050565b60008060408385031215611a6157600080fd5b6000611a6f8582860161195a565b9250506020611a8085828601611930565b9150509250929050565b600080600060608486031215611a9f57600080fd5b6000611aad8682870161195a565b9350506020611abe86828701611945565b9250506040611acf86828701611930565b9150509250925092565b60008060408385031215611aec57600080fd5b6000611afa8582860161195a565b9250506020611b0b8582860161195a565b9150509250929050565b600060208284031215611b2757600080fd5b6000611b3584828501611984565b91505092915050565b60008060408385031215611b5157600080fd5b6000611b5f8582860161196f565b9250506020611b7085828601611930565b9150509250929050565b6000611b868383611ba6565b60208301905092915050565b6000611b9e8383612004565b905092915050565b611baf81612494565b82525050565b611bbe81612494565b82525050565b6000611bcf826123e8565b611bd98185612430565b9350611be4836123b3565b8060005b83811015611c15578151611bfc8882611b7a565b9750611c0783612409565b925050600181019050611be8565b5085935050505092915050565b6000611c2d826123e8565b611c378185612441565b9350611c42836123b3565b8060005b83811015611c73578151611c5a8882611b7a565b9750611c6583612409565b925050600181019050611c46565b5085935050505092915050565b6000611c8b826123f3565b611c958185612441565b9350611ca0836123c3565b8060005b83811015611cd857611cb582612527565b611cbf8882611b7a565b9750611cca83612416565b925050600181019050611ca4565b5085935050505092915050565b6000611cf0826123fe565b611cfa8185612452565b935083602082028501611d0c856123d8565b8060005b85811015611d485784840389528151611d298582611b92565b9450611d3483612423565b925060208a01995050600181019050611d10565b50829750879550505050505092915050565b611d63816124a6565b82525050565b611d72816124e9565b82525050565b6000611d85601283612463565b91507f50726f706f73616c206e6f7420657869737400000000000000000000000000006000830152602082019050919050565b6000611dc5601883612463565b91507f4f6e6c792070726f706f7365722063616e207265766f6b6500000000000000006000830152602082019050919050565b6000611e05600d83612463565b91507f416c726561647920766f746564000000000000000000000000000000000000006000830152602082019050919050565b6000611e45602683612463565b91507f2766726f6d272069732067726561746572207468616e202770726f706f73616c60008301527f436f756e742700000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000611eab602a83612463565b91507f4f6e6c79206e65776c7920637265617465642070726f706f73616c2063616e2060008301527f6265207265766f6b6564000000000000000000000000000000000000000000006020830152604082019050919050565b6000611f11601883612463565b91507f43757272656e742070726f706f73616c206e6f7420656e6400000000000000006000830152602082019050919050565b6000611f51601b83612463565b91507f2766726f6d272069732067726561746572207468616e2027746f2700000000006000830152602082019050919050565b6000611f91600b83612463565b91507f4f6e6c79206f776e6572210000000000000000000000000000000000000000006000830152602082019050919050565b6000611fd1601783612463565b91507f50726f706f73616c206973206e6f7420766f7461626c650000000000000000006000830152602082019050919050565b600060e08301600083015161201c6000860182611ba6565b50602083015161202f6020860182611ba6565b50604083015161204260408601826120c5565b50606083015161205560608601826120a7565b50608083015161206860808601826120c5565b5060a083015184820360a08601526120808282611bc4565b91505060c083015184820360c086015261209a8282611bc4565b9150508091505092915050565b6120b0816124d2565b82525050565b6120bf816124d2565b82525050565b6120ce816124dc565b82525050565b6120dd816124dc565b82525050565b60006020820190506120f86000830184611bb5565b92915050565b600060a0820190506121136000830188611bb5565b6121206020830187611bb5565b61212d60408301866120d4565b61213a60608301856120b6565b61214760808301846120d4565b9695505050505050565b600060e082019050612166600083018a611bb5565b6121736020830189611bb5565b61218060408301886120d4565b61218d60608301876120b6565b61219a60808301866120d4565b81810360a08301526121ac8185611c22565b905081810360c08301526121c08184611c22565b905098975050505050505050565b600060408201905081810360008301526121e88185611c80565b905081810360208301526121fc8184611c80565b90509392505050565b6000602082019050818103600083015261221f8184611ce5565b905092915050565b600060208201905061223c6000830184611d5a565b92915050565b60006020820190506122576000830184611d69565b92915050565b6000602082019050818103600083015261227681611d78565b9050919050565b6000602082019050818103600083015261229681611db8565b9050919050565b600060208201905081810360008301526122b681611df8565b9050919050565b600060208201905081810360008301526122d681611e38565b9050919050565b600060208201905081810360008301526122f681611e9e565b9050919050565b6000602082019050818103600083015261231681611f04565b9050919050565b6000602082019050818103600083015261233681611f44565b9050919050565b6000602082019050818103600083015261235681611f84565b9050919050565b6000602082019050818103600083015261237681611fc4565b9050919050565b600060208201905061239260008301846120b6565b92915050565b60006020820190506123ad60008301846120d4565b92915050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b6000819050602082019050919050565b600081519050919050565b600081549050919050565b600081519050919050565b6000602082019050919050565b6000600182019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061249f826124b2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006124f4826124fb565b9050919050565b6000612506826124b2565b9050919050565b600061252061251b8361253a565b612474565b9050919050565b6000612533825461250d565b9050919050565b60008160001c9050919050565b61255081612494565b811461255b57600080fd5b50565b612567816124a6565b811461257257600080fd5b50565b61257e816124d2565b811461258957600080fd5b50565b612595816124dc565b81146125a057600080fd5b5056fea2646970667358221220871525483d7e6449501ad48765018727953dbdd23fdcb830b7d77e2837122c3a64736f6c634300060a0033608060405234801561001057600080fd5b50604051610d41380380610d418339818101604052604081101561003357600080fd5b8101908080519060200190929190805190602001909291905050508181336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061009f826101ea60201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322acb8676040518163ffffffff1660e01b815260040160206040518083038186803b15801561014957600080fd5b505afa15801561015d573d6000803e3d6000fd5b505050506040513d602081101561017357600080fd5b810190808051906020019092919050505063ffffffff1610156101e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526029815260200180610d186029913960400191505060405180910390fd5b50505050610355565b6101f9336102ae60201b60201c565b61026b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4f6e6c79206f776e65722100000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156102ed5760019050610350565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561034b5760019050610350565b600090505b919050565b6109b4806103646000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301410de21461006757806313af4035146100ef578063185c15871461013357806353bfcf2f1461017d578063b2bdfa7b146102e3578063cd5d21181461032d575b600080fd5b6100d3600480360360a081101561007d57600080fd5b81019080803563ffffffff169060200190929190803563ffffffff169060200190929190803563ffffffff169060200190929190803560ff169060200190929190803560ff169060200190929190505050610389565b604051808260ff1660ff16815260200191505060405180910390f35b6101316004803603602081101561010557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103e2565b005b61013b6104a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c76004803603604081101561019357600080fd5b81019080803590602001906401000000008111156101b057600080fd5b8201836020820111156101c257600080fd5b803590602001918460208302840111640100000000831117156101e457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561024457600080fd5b82018360208201111561025657600080fd5b8035906020019184602083028401116401000000008311171561027857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506104c6565b604051808260ff1660ff16815260200191505060405180910390f35b6102eb6108b2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61036f6004803603602081101561034357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506108d7565b604051808215151515815260200191505060405180910390f35b60008260ff16840263ffffffff166064860263ffffffff1610156103b057600190506103d9565b848260ff160263ffffffff166064870263ffffffff16106103d457600290506103d9565b600390505b95945050505050565b6103eb336108d7565b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f4f6e6c79206f776e65722100000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663965b9ff1856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561055a57808201518184015260208101905061053f565b505050509050019250505060206040518083038186803b15801561057d57600080fd5b505afa158015610591573d6000803e3d6000fd5b505050506040513d60208110156105a757600080fd5b810190808051906020019092919050505090506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663965b9ff1856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b8381101561064d578082015181840152602081019050610632565b505050509050019250505060206040518083038186803b15801561067057600080fd5b505afa158015610684573d6000803e3d6000fd5b505050506040513d602081101561069a57600080fd5b8101908080519060200190929190505050820190506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166322acb8676040518163ffffffff1660e01b815260040160206040518083038186803b15801561071957600080fd5b505afa15801561072d573d6000803e3d6000fd5b505050506040513d602081101561074357600080fd5b810190808051906020019092919050505090506108a7838383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635615696f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107c457600080fd5b505afa1580156107d8573d6000803e3d6000fd5b505050506040513d60208110156107ee57600080fd5b8101908080519060200190929190505050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b6fd90676040518163ffffffff1660e01b815260040160206040518083038186803b15801561086757600080fd5b505afa15801561087b573d6000803e3d6000fd5b505050506040513d602081101561089157600080fd5b8101908080519060200190929190505050610389565b935050505092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109165760019050610979565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109745760019050610979565b600090505b91905056fea2646970667358221220b26b99c2b4911a6420abf7c729a944c7ffe6ef1801905be8efa527d5a3faafde64736f6c634300060a0033636f6d6d6974746565206973206572726f722c20706c6561736520636865636b206164647265737321"

// DeployProposalManager deploys a new contract, binding an instance of ProposalManager to it.
func DeployProposalManager(auth *bind.TransactOpts, backend bind.ContractBackend, committeeMgrAddress common.Address, committeeAddress common.Address) (common.Address, *types.Receipt, *ProposalManager, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, receipt, contract, err := bind.DeployContract(auth, parsed, common.FromHex(ProposalManagerBin), backend, committeeMgrAddress, committeeAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, receipt, &ProposalManager{ProposalManagerCaller: ProposalManagerCaller{contract: contract}, ProposalManagerTransactor: ProposalManagerTransactor{contract: contract}, ProposalManagerFilterer: ProposalManagerFilterer{contract: contract}}, nil
}

func AsyncDeployProposalManager(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend, committeeMgrAddress common.Address, committeeAddress common.Address) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(ProposalManagerBin), backend, committeeMgrAddress, committeeAddress)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// ProposalManager is an auto generated Go binding around a Solidity contract.
type ProposalManager struct {
	ProposalManagerCaller     // Read-only binding to the contract
	ProposalManagerTransactor // Write-only binding to the contract
	ProposalManagerFilterer   // Log filterer for contract events
}

// ProposalManagerCaller is an auto generated read-only Go binding around a Solidity contract.
type ProposalManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerTransactor is an auto generated write-only Go binding around a Solidity contract.
type ProposalManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type ProposalManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ProposalManagerSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type ProposalManagerSession struct {
	Contract     *ProposalManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ProposalManagerCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type ProposalManagerCallerSession struct {
	Contract *ProposalManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// ProposalManagerTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type ProposalManagerTransactorSession struct {
	Contract     *ProposalManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// ProposalManagerRaw is an auto generated low-level Go binding around a Solidity contract.
type ProposalManagerRaw struct {
	Contract *ProposalManager // Generic contract binding to access the raw methods on
}

// ProposalManagerCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type ProposalManagerCallerRaw struct {
	Contract *ProposalManagerCaller // Generic read-only contract binding to access the raw methods on
}

// ProposalManagerTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type ProposalManagerTransactorRaw struct {
	Contract *ProposalManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewProposalManager creates a new instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManager(address common.Address, backend bind.ContractBackend) (*ProposalManager, error) {
	contract, err := bindProposalManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ProposalManager{ProposalManagerCaller: ProposalManagerCaller{contract: contract}, ProposalManagerTransactor: ProposalManagerTransactor{contract: contract}, ProposalManagerFilterer: ProposalManagerFilterer{contract: contract}}, nil
}

// NewProposalManagerCaller creates a new read-only instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerCaller(address common.Address, caller bind.ContractCaller) (*ProposalManagerCaller, error) {
	contract, err := bindProposalManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerCaller{contract: contract}, nil
}

// NewProposalManagerTransactor creates a new write-only instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*ProposalManagerTransactor, error) {
	contract, err := bindProposalManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerTransactor{contract: contract}, nil
}

// NewProposalManagerFilterer creates a new log filterer instance of ProposalManager, bound to a specific deployed contract.
func NewProposalManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*ProposalManagerFilterer, error) {
	contract, err := bindProposalManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ProposalManagerFilterer{contract: contract}, nil
}

// bindProposalManager binds a generic wrapper to an already deployed contract.
func bindProposalManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ProposalManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ProposalManager *ProposalManagerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ProposalManager.Contract.ProposalManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ProposalManager *ProposalManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.ProposalManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ProposalManager *ProposalManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.ProposalManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ProposalManager *ProposalManagerCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _ProposalManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ProposalManager *ProposalManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ProposalManager *ProposalManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.contract.Transact(opts, method, params...)
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_owner")
	return *ret0, err
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerSession) Owner() (common.Address, error) {
	return _ProposalManager.Contract.Owner(&_ProposalManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0xb2bdfa7b.
//
// Solidity: function _owner() constant returns(address)
func (_ProposalManager *ProposalManagerCallerSession) Owner() (common.Address, error) {
	return _ProposalManager.Contract.Owner(&_ProposalManager.CallOpts)
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) ProposalCount(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_proposalCount")
	return *ret0, err
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) ProposalCount() (*big.Int, error) {
	return _ProposalManager.Contract.ProposalCount(&_ProposalManager.CallOpts)
}

// ProposalCount is a free data retrieval call binding the contract method 0x6f2904cc.
//
// Solidity: function _proposalCount() constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) ProposalCount() (*big.Int, error) {
	return _ProposalManager.Contract.ProposalCount(&_ProposalManager.CallOpts)
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) ProposalIndex(opts *bind.CallOpts, arg0 uint8, arg1 common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_proposalIndex", arg0, arg1)
	return *ret0, err
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) ProposalIndex(arg0 uint8, arg1 common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.ProposalIndex(&_ProposalManager.CallOpts, arg0, arg1)
}

// ProposalIndex is a free data retrieval call binding the contract method 0x1cc05cbc.
//
// Solidity: function _proposalIndex(uint8 , address ) constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) ProposalIndex(arg0 uint8, arg1 common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.ProposalIndex(&_ProposalManager.CallOpts, arg0, arg1)
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerCaller) Proposals(opts *bind.CallOpts, arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	ret := new(struct {
		ResourceId          common.Address
		Proposer            common.Address
		ProposalType        uint8
		BlockNumberInterval *big.Int
		Status              uint8
	})
	out := ret
	err := _ProposalManager.contract.Call(opts, out, "_proposals", arg0)
	return *ret, err
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerSession) Proposals(arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	return _ProposalManager.Contract.Proposals(&_ProposalManager.CallOpts, arg0)
}

// Proposals is a free data retrieval call binding the contract method 0x0a494840.
//
// Solidity: function _proposals(uint256 ) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status)
func (_ProposalManager *ProposalManagerCallerSession) Proposals(arg0 *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
}, error) {
	return _ProposalManager.Contract.Proposals(&_ProposalManager.CallOpts, arg0)
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerCaller) VoteComputer(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "_voteComputer")
	return *ret0, err
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerSession) VoteComputer() (common.Address, error) {
	return _ProposalManager.Contract.VoteComputer(&_ProposalManager.CallOpts)
}

// VoteComputer is a free data retrieval call binding the contract method 0xfcf81c14.
//
// Solidity: function _voteComputer() constant returns(address)
func (_ProposalManager *ProposalManagerCallerSession) VoteComputer() (common.Address, error) {
	return _ProposalManager.Contract.VoteComputer(&_ProposalManager.CallOpts)
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerCaller) Auth(opts *bind.CallOpts, src common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "auth", src)
	return *ret0, err
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerSession) Auth(src common.Address) (bool, error) {
	return _ProposalManager.Contract.Auth(&_ProposalManager.CallOpts, src)
}

// Auth is a free data retrieval call binding the contract method 0xcd5d2118.
//
// Solidity: function auth(address src) constant returns(bool)
func (_ProposalManager *ProposalManagerCallerSession) Auth(src common.Address) (bool, error) {
	return _ProposalManager.Contract.Auth(&_ProposalManager.CallOpts, src)
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerCaller) GetIdByTypeAndResourceId(opts *bind.CallOpts, proposalType uint8, resourceId common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getIdByTypeAndResourceId", proposalType, resourceId)
	return *ret0, err
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerSession) GetIdByTypeAndResourceId(proposalType uint8, resourceId common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.GetIdByTypeAndResourceId(&_ProposalManager.CallOpts, proposalType, resourceId)
}

// GetIdByTypeAndResourceId is a free data retrieval call binding the contract method 0x6d23cd58.
//
// Solidity: function getIdByTypeAndResourceId(uint8 proposalType, address resourceId) constant returns(uint256)
func (_ProposalManager *ProposalManagerCallerSession) GetIdByTypeAndResourceId(proposalType uint8, resourceId common.Address) (*big.Int, error) {
	return _ProposalManager.Contract.GetIdByTypeAndResourceId(&_ProposalManager.CallOpts, proposalType, resourceId)
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerCaller) GetProposalInfo(opts *bind.CallOpts, proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	ret := new(struct {
		ResourceId          common.Address
		Proposer            common.Address
		ProposalType        uint8
		BlockNumberInterval *big.Int
		Status              uint8
		AgreeVoters         []common.Address
		AgainstVoters       []common.Address
	})
	out := ret
	err := _ProposalManager.contract.Call(opts, out, "getProposalInfo", proposalId)
	return *ret, err
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerSession) GetProposalInfo(proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	return _ProposalManager.Contract.GetProposalInfo(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalInfo is a free data retrieval call binding the contract method 0xbc903cb8.
//
// Solidity: function getProposalInfo(uint256 proposalId) constant returns(address resourceId, address proposer, uint8 proposalType, uint256 blockNumberInterval, uint8 status, address[] agreeVoters, address[] againstVoters)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalInfo(proposalId *big.Int) (struct {
	ResourceId          common.Address
	Proposer            common.Address
	ProposalType        uint8
	BlockNumberInterval *big.Int
	Status              uint8
	AgreeVoters         []common.Address
	AgainstVoters       []common.Address
}, error) {
	return _ProposalManager.Contract.GetProposalInfo(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerCaller) GetProposalInfoList(opts *bind.CallOpts, from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	var (
		ret0 = new([]ProposalManagerProposalInfo)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getProposalInfoList", from, to)
	return *ret0, err
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerSession) GetProposalInfoList(from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	return _ProposalManager.Contract.GetProposalInfoList(&_ProposalManager.CallOpts, from, to)
}

// GetProposalInfoList is a free data retrieval call binding the contract method 0xdde248e3.
//
// Solidity: function getProposalInfoList(uint256 from, uint256 to) constant returns([]ProposalManagerProposalInfo)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalInfoList(from *big.Int, to *big.Int) ([]ProposalManagerProposalInfo, error) {
	return _ProposalManager.Contract.GetProposalInfoList(&_ProposalManager.CallOpts, from, to)
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerCaller) GetProposalStatus(opts *bind.CallOpts, proposalId *big.Int) (uint8, error) {
	var (
		ret0 = new(uint8)
	)
	out := ret0
	err := _ProposalManager.contract.Call(opts, out, "getProposalStatus", proposalId)
	return *ret0, err
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerSession) GetProposalStatus(proposalId *big.Int) (uint8, error) {
	return _ProposalManager.Contract.GetProposalStatus(&_ProposalManager.CallOpts, proposalId)
}

// GetProposalStatus is a free data retrieval call binding the contract method 0x401853b7.
//
// Solidity: function getProposalStatus(uint256 proposalId) constant returns(uint8)
func (_ProposalManager *ProposalManagerCallerSession) GetProposalStatus(proposalId *big.Int) (uint8, error) {
	return _ProposalManager.Contract.GetProposalStatus(&_ProposalManager.CallOpts, proposalId)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerTransactor) Create(opts *bind.TransactOpts, proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "create", proposer, proposalType, resourceId, blockNumberInterval)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncCreate(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "create", proposer, proposalType, resourceId, blockNumberInterval)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerSession) Create(proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Create(&_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

func (_ProposalManager *ProposalManagerSession) AsyncCreate(handler func(*types.Receipt, error), proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncCreate(handler, &_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

// Create is a paid mutator transaction binding the contract method 0x2c3956fe.
//
// Solidity: function create(address proposer, uint8 proposalType, address resourceId, uint256 blockNumberInterval) returns(uint256)
func (_ProposalManager *ProposalManagerTransactorSession) Create(proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Create(&_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncCreate(handler func(*types.Receipt, error), proposer common.Address, proposalType uint8, resourceId common.Address, blockNumberInterval *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncCreate(handler, &_ProposalManager.TransactOpts, proposer, proposalType, resourceId, blockNumberInterval)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerTransactor) RefreshProposalStatus(opts *bind.TransactOpts, proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "refreshProposalStatus", proposalId)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "refreshProposalStatus", proposalId)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerSession) RefreshProposalStatus(proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.RefreshProposalStatus(&_ProposalManager.TransactOpts, proposalId)
}

func (_ProposalManager *ProposalManagerSession) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRefreshProposalStatus(handler, &_ProposalManager.TransactOpts, proposalId)
}

// RefreshProposalStatus is a paid mutator transaction binding the contract method 0x19dcd07e.
//
// Solidity: function refreshProposalStatus(uint256 proposalId) returns(uint8)
func (_ProposalManager *ProposalManagerTransactorSession) RefreshProposalStatus(proposalId *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.RefreshProposalStatus(&_ProposalManager.TransactOpts, proposalId)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncRefreshProposalStatus(handler func(*types.Receipt, error), proposalId *big.Int) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRefreshProposalStatus(handler, &_ProposalManager.TransactOpts, proposalId)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerTransactor) Revoke(opts *bind.TransactOpts, proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "revoke", proposalId, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncRevoke(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "revoke", proposalId, voterAddress)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerSession) Revoke(proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Revoke(&_ProposalManager.TransactOpts, proposalId, voterAddress)
}

func (_ProposalManager *ProposalManagerSession) AsyncRevoke(handler func(*types.Receipt, error), proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRevoke(handler, &_ProposalManager.TransactOpts, proposalId, voterAddress)
}

// Revoke is a paid mutator transaction binding the contract method 0x20d154da.
//
// Solidity: function revoke(uint256 proposalId, address voterAddress) returns()
func (_ProposalManager *ProposalManagerTransactorSession) Revoke(proposalId *big.Int, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Revoke(&_ProposalManager.TransactOpts, proposalId, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncRevoke(handler func(*types.Receipt, error), proposalId *big.Int, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncRevoke(handler, &_ProposalManager.TransactOpts, proposalId, voterAddress)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerTransactor) SetOwner(opts *bind.TransactOpts, owner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "setOwner", owner)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncSetOwner(handler func(*types.Receipt, error), opts *bind.TransactOpts, owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "setOwner", owner)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerSession) SetOwner(owner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetOwner(&_ProposalManager.TransactOpts, owner)
}

func (_ProposalManager *ProposalManagerSession) AsyncSetOwner(handler func(*types.Receipt, error), owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetOwner(handler, &_ProposalManager.TransactOpts, owner)
}

// SetOwner is a paid mutator transaction binding the contract method 0x13af4035.
//
// Solidity: function setOwner(address owner) returns()
func (_ProposalManager *ProposalManagerTransactorSession) SetOwner(owner common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetOwner(&_ProposalManager.TransactOpts, owner)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncSetOwner(handler func(*types.Receipt, error), owner common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetOwner(handler, &_ProposalManager.TransactOpts, owner)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerTransactor) SetVoteComputer(opts *bind.TransactOpts, addr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "setVoteComputer", addr)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncSetVoteComputer(handler func(*types.Receipt, error), opts *bind.TransactOpts, addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "setVoteComputer", addr)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerSession) SetVoteComputer(addr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetVoteComputer(&_ProposalManager.TransactOpts, addr)
}

func (_ProposalManager *ProposalManagerSession) AsyncSetVoteComputer(handler func(*types.Receipt, error), addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetVoteComputer(handler, &_ProposalManager.TransactOpts, addr)
}

// SetVoteComputer is a paid mutator transaction binding the contract method 0x290bc797.
//
// Solidity: function setVoteComputer(address addr) returns()
func (_ProposalManager *ProposalManagerTransactorSession) SetVoteComputer(addr common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.SetVoteComputer(&_ProposalManager.TransactOpts, addr)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncSetVoteComputer(handler func(*types.Receipt, error), addr common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncSetVoteComputer(handler, &_ProposalManager.TransactOpts, addr)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerTransactor) Vote(opts *bind.TransactOpts, proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.contract.Transact(opts, "vote", proposalId, agree, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactor) AsyncVote(handler func(*types.Receipt, error), opts *bind.TransactOpts, proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.contract.AsyncTransact(opts, handler, "vote", proposalId, agree, voterAddress)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerSession) Vote(proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Vote(&_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

func (_ProposalManager *ProposalManagerSession) AsyncVote(handler func(*types.Receipt, error), proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncVote(handler, &_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

// Vote is a paid mutator transaction binding the contract method 0x315ce5e2.
//
// Solidity: function vote(uint256 proposalId, bool agree, address voterAddress) returns(uint8)
func (_ProposalManager *ProposalManagerTransactorSession) Vote(proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, *types.Receipt, error) {
	return _ProposalManager.Contract.Vote(&_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}

func (_ProposalManager *ProposalManagerTransactorSession) AsyncVote(handler func(*types.Receipt, error), proposalId *big.Int, agree bool, voterAddress common.Address) (*types.Transaction, error) {
	return _ProposalManager.Contract.AsyncVote(handler, &_ProposalManager.TransactOpts, proposalId, agree, voterAddress)
}
